name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Inject environment variables
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: ${{ secrets.EC2_TARGET_PATH }}

      - name: SSH into EC2 and restart app
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |

            LATEST_JAR=$(ls -t ${{ secrets.EC2_TARGET_PATH }}/*.jar | head -n1)
            echo "Latest JAR found: $LATEST_JAR"

            cat <<EOF > /tmp/restart_app.sh
            if pgrep -f "${{ secrets.JAR_NAME }}"; then
              echo "Killing existing process for ${{ secrets.JAR_NAME }}"
              pkill -f "${{ secrets.JAR_NAME }}"
              sleep 5
            else
              echo "No existing process for ${{ secrets.JAR_NAME }} found."
            fi

           
            echo "Starting application with JAR: $LATEST_JAR"
            nohup setsid env \
              SPRING_DATASOURCE_URL="${{ secrets.DB_URL }}" \
              SPRING_DATASOURCE_USERNAME="${{ secrets.DB_USERNAME }}" \
              SPRING_DATASOURCE_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              java -jar "$LATEST_JAR" \
              > ${{ secrets.EC2_TARGET_PATH }}/app.log 2>&1 < /dev/null &

            echo "Application restart script completed."
            EOF

            chmod +x /tmp/restart_app.sh

            echo "Scheduling application restart via 'at' command."
            /tmp/restart_app.sh | at now

            echo "Application restart scheduled. GitHub Actions will now exit."
            exit 0