name: Deploy to EC2

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 이 단계는 이제 필수는 아니지만, 다른 용도로 필요할 수 있으므로 유지합니다.
      - name: Inject environment variables
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "holiday.api.key=${{ secrets.HOLIDAY }}" >> $GITHUB_ENV

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test --no-daemon

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: ${{ secrets.EC2_TARGET_PATH }}

      - name: Create Firebase Admin SDK file on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo '${{ secrets.FIREBASE_ADMIN_SDK }}' > ${{ secrets.EC2_TARGET_PATH }}/config/hal-il-project-firebase-adminsdk-fbsvc-d93ce33edb.json

      - name: SSH into EC2 and restart app
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            LATEST_JAR=$(ls -t ${{ secrets.EC2_TARGET_PATH }}/build/libs/*.jar | head -n1)
            echo "Latest JAR found: $LATEST_JAR"

            # 기존 프로세스 종료
            if [ -f ${{ secrets.EC2_TARGET_PATH }}/app.pid ]; then
              kill -9 $(cat ${{ secrets.EC2_TARGET_PATH }}/app.pid) || true
              rm -f ${{ secrets.EC2_TARGET_PATH }}/app.pid
            fi

            # 새로 실행
            nohup java -jar "$LATEST_JAR" \
              --spring.datasource.url="${{ secrets.DB_URL }}" \
              --spring.datasource.username="${{ secrets.DB_USERNAME }}" \
              --spring.datasource.password="${{ secrets.DB_PASSWORD }}" \
              --holiday.api.key="${{ secrets.HOLIDAY }}" \
              > ${{ secrets.EC2_TARGET_PATH }}/app.log 2>&1 &

            echo $! > ${{ secrets.EC2_TARGET_PATH }}/app.pid
            echo "Application started with PID $(cat ${{ secrets.EC2_TARGET_PATH }}/app.pid)"
            exit 0