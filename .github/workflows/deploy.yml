
name: Deploy to EC2

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: ${{ secrets.EC2_TARGET_PATH }}/build/libs

      - name: Create Firebase Admin SDK file on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p ${{ secrets.EC2_TARGET_PATH }}/config
            echo '${{ secrets.FIREBASE_ADMIN_SDK }}' > ${{ secrets.EC2_TARGET_PATH }}/config/firebase-adminsdk.json

      - name: Restart Spring Boot App on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            LATEST_JAR=$(ls -t ${{ secrets.EC2_TARGET_PATH }}/build/libs/*.jar | head -n1)
            echo "Latest JAR found: $LATEST_JAR"

            # 기존 프로세스 종료
            if pgrep -f "${{ secrets.JAR_NAME }}"; then
              echo "Killing existing process for ${{ secrets.JAR_NAME }}..."
              pkill -f "${{ secrets.JAR_NAME }}"
              sleep 5
            else
              echo "No existing process for ${{ secrets.JAR_NAME }} found."
            fi

            # 새 프로세스 실행
            echo "Starting application with JAR: $LATEST_JAR"
            nohup java -jar "$LATEST_JAR" \
              --spring.datasource.url="${{ secrets.DB_URL }}" \
              --spring.datasource.username="${{ secrets.DB_USERNAME }}" \
              --spring.datasource.password="${{ secrets.DB_PASSWORD }}" \
              --holiday.api.key="${{ secrets.HOLIDAY }}" \
              > ${{ secrets.EC2_TARGET_PATH }}/build/libs/app.log 2>&1 & disown

            echo "Deployment finished."